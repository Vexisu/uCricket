@misc{1IntroductionAVRRust,
  title = {1. {{Introduction}} - {{The AVR-Rust Guidebook}}},
  urldate = {2025-02-07},
  howpublished = {https://book.avr-rust.org/},
  file = {/home/vexisu/Zotero/storage/TA2Z35HY/book.avr-rust.org.html}
}

@misc{30009630M8bitPIC2018,
  title = {{{30009630M}}: 8-Bit {{PIC}}{\textregistered} and {{AVR}}{\textregistered} {{Microcontrollers}}},
  year = {2018},
  publisher = {Microchip Technology Inc.},
  urldate = {2025-02-06},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/JGYWUW3W/30009630M.pdf}
}

@book{appelModernCompilerImplementation2002,
  title = {Modern Compiler Implementation in {{Java}}},
  author = {Appel, Andrew W. and Palsberg, Jens},
  year = {2002},
  edition = {2nd ed},
  publisher = {Cambridge University Press},
  address = {Cambridge, UK; New York, USA},
  isbn = {978-0-521-82060-8},
  lccn = {QA76.76.C65 A674 2002},
  keywords = {Compilers (Computer programs),Java (Computer program language)}
}

@misc{ATmega328P8bitAVR,
  title = {{{ATmega328P}}: 8-Bit {{AVR Microcontroller}} with {{32K Bytes In-System Programmable Flash}}},
  publisher = {Atmel},
  file = {/home/vexisu/Zotero/storage/NIRW4L6X/Atmel-7810-Automotive-Microcontrollers-ATmega328P_Datasheet.pdf}
}

@misc{AVRAdaWikiHome,
  title = {{{AVR-Ada}} / {{Wiki}} / {{Home}}},
  urldate = {2025-02-01},
  howpublished = {https://sourceforge.net/p/avr-ada/wiki/Home/},
  file = {/home/vexisu/Zotero/storage/VWWUDEW4/Home.html}
}

@techreport{AVRMicrocontrollersMarket2024,
  title = {{{AVR Microcontrollers Market Size}} and {{Growth}} to 2032},
  year = {2024},
  number = {TMI2430},
  institution = {The Market Intelligence},
  urldate = {2025-02-06},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/2RF3IZJT/avr-microcontrollers-market-2430.html}
}

@misc{AvrrustRustlegacyforkDeprecated,
  title = {Avr-Rust/Rust-Legacy-Fork: [Deprecated; Merged Upstream] {{A}} Fork of the {{Rust}} Programming Language with {{AVR}} Support},
  urldate = {2025-02-07},
  howpublished = {https://github.com/avr-rust/rust-legacy-fork},
  file = {/home/vexisu/Zotero/storage/MB7RVSL4/rust-legacy-fork.html}
}

@article{baqaiComparisonParsingTechniques,
  title = {Comparison of Parsing Techniques},
  author = {Baqai, Hamna and Ilyas, Ahsan and Ejaz, Aatiqa}
}

@misc{BisonGNUProject,
  title = {Bison - {{GNU Project}} - {{Free Software Foundation}}},
  urldate = {2025-02-08},
  howpublished = {https://www.gnu.org/software/bison/},
  file = {/home/vexisu/Zotero/storage/T9B6TUS9/bison.html}
}

@article{gasibaThinkThisBeginning2023,
  title = {I {{Think This}} Is the {{Beginning}} of a {{Beautiful Friendship}} - {{On}} the {{Rust Programming Language}} and {{Secure Software Development}} in the {{Industry}}},
  author = {Gasiba, Tiago Espinha and Amburi, Sathwik},
  year = {2023},
  abstract = {Since the Rust programming language was accepted into the Linux Kernel, it has gained significant attention from the software developer community and the industry. Rust has been developed to address many traditional software problems, such as memory safety and concurrency. Consequently, software written in Rust is expected to have fewer vulnerabilities and be more secure. However, a systematic analysis of the security of software developed in Rust is still missing. The present work aims to close this gap by analyzing how Rust deals with typical software vulnerabilities. We also compare Rust to C, C++, and Java, three widely used programming languages in the industry, regarding potential software vulnerabilities. Our results are based on a literature review, interviews with industrial cybersecurity experts, and an analysis of existing static code analysis tools. We conclude that, while Rust improves the status quo compared to the other programming languages, writing vulnerable software in Rust is still possible. Our research contributes to academia by enhancing the existing knowledge of software vulnerabilities. Furthermore, industrial practitioners can benefit from this study when evaluating the use of different programming languages in their projects.},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/J6EGKGRD/Gasiba i Amburi - 2023 - I Think This is the Beginning of a Beautiful Friendship - On the Rust Programming Language and Secur.pdf}
}

@misc{GCCCompilersAVR,
  title = {{{GCC Compilers}} for {{AVR}}{\textregistered} and {{Arm}}{\textregistered}-{{Based MCUs}} and {{MPUs}}},
  urldate = {2025-02-07},
  abstract = {Microchip Studio, formerly known as Atmel Studio, is a development environment for developing and debugging AVR and SAM MCU applications.},
  howpublished = {https://www.microchip.com/en-us/tools-resources/develop/microchip-studio/gcc-compilers},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/926PYJJV/gcc-compilers.html}
}

@misc{harbaumHarbaumNanoVM2025,
  title = {Harbaum/{{NanoVM}}},
  author = {Harbaum, Till},
  year = {2025},
  month = feb,
  urldate = {2025-02-07},
  abstract = {A really tiny Java Virtual Machine},
  copyright = {GPL-2.0}
}

@misc{JFlexFeatures,
  title = {{{JFlex}} - {{Features}}},
  urldate = {2025-01-28},
  howpublished = {https://jflex.de/features.html},
  file = {/home/vexisu/Zotero/storage/Q26RZCUN/features.html}
}

@article{kahanIEEEStandard7541997,
  title = {{{IEEE Standard}} 754 for {{Binary Floating-Point Arithmetic}}},
  author = {Kahan, W},
  year = {1997},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/I47GYZ6F/Kahan - 1997 - IEEE Standard 754 for Binary Floating-Point Arithmetic.pdf}
}

@article{kunikowskiOverviewATmegaAVR2015,
  title = {An {{Overview}} of {{ATmega AVR Microcontrollers Used}} in {{Scientific Research}} and {{Industrial Applications}}},
  author = {Kunikowski, Wojciech and Czerwi{\'n}ski, Ernest and Olejnik, Pawe{\l} and Awrejcewicz, Jan},
  year = {2015},
  month = mar,
  journal = {PAR},
  volume = {19},
  pages = {15--20},
  doi = {10.14313/PAR_215/15},
  abstract = {Nowadays, microcontrollers are commonly used in many fields of industrial applications previously dominated by other devices. Their strengths such as: processing power, low cost, and small sizes enable them to become substitutes for industrial PLC controllers, analog electronic circuits, and many more. In first part of this article an overview of the Atmel AVR microprocessor family can be found, alongside with many scientific and industrial applications. Second part of this article contains a detailed description of two implementations of ATmega644PA microprocessor. First one is a controller with PID regulation that supports a DC motor driver. Second one is a differential equation solver with 4-th order Runge-Kutta method implemented. It is used for solving a torsion pendulum dynamics. Finally, some general conclusions regarding the two presented implementations are made.},
  file = {/home/vexisu/Zotero/storage/PIXLPJXN/Kunikowski et al. - 2015 - An Overview of ATmega AVR Microcontrollers Used in Scientific Research and Industrial Applications.pdf}
}

@misc{LLVMCompilerInfrastructurea,
  title = {The {{LLVM Compiler Infrastructure Project}}},
  urldate = {2025-01-28},
  howpublished = {https://llvm.org/Features.html},
  file = {/home/vexisu/Zotero/storage/Y8UWBJI5/Features.html}
}

@book{nystromCraftingInterpreters2021,
  title = {Crafting Interpreters},
  author = {Nystrom, Robert},
  year = {2021},
  publisher = {Verlag nicht ermittelbar},
  address = {Erscheinungsort nicht ermittelbar},
  isbn = {978-0-9905829-3-9},
  langid = {english}
}

@misc{PyMitePythonWiki,
  title = {{{PyMite}} - {{Python Wiki}}},
  urldate = {2025-02-07},
  howpublished = {https://wiki.python.org/moin/PyMite},
  file = {/home/vexisu/Zotero/storage/HC7695TR/PyMite.html}
}

@misc{R3ArduinoDocumentation,
  title = {{{UNO R3}} {\textbar} {{Arduino Documentation}}},
  urldate = {2025-02-07},
  howpublished = {https://docs.arduino.cc/hardware/uno-rev3/\#tech-specs},
  file = {/home/vexisu/Zotero/storage/34TD5EHA/uno-rev3.html}
}

@misc{RFCMergingAvrrust,
  title = {{{RFC}}: {{Merging}} the Avr-Rust Fork Upstream {$\cdot$} {{Issue}} \#44052 {$\cdot$} Rust-Lang/Rust},
  shorttitle = {{{RFC}}},
  journal = {GitHub},
  urldate = {2025-02-07},
  abstract = {Hello all, I would like to know the general opinions on merging the avr-rust fork into Rust proper. The fork itself has became a lot more stable with less bugs in the recent months. It has also sta...},
  howpublished = {https://github.com/rust-lang/rust/issues/44052},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/FE6J9XCQ/44052.html}
}

@inproceedings{SOBRAL201930Y,
  title = {30 Years of Cs1: {{Programming}} Languages Evolution},
  booktitle = {{{ICERI2019}} Proceedings},
  author = {Sobral, S.},
  year = {11-13 November, 2019 2019},
  series = {12th Annual International Conference of Education, Research and Innovation},
  pages = {9197--9205},
  publisher = {IATED},
  address = {Seville, Spain},
  issn = {2340-1095},
  doi = {10.21125/iceri.2019.2214},
  isbn = {978-84-09-14755-7}
}

@misc{teamOneBoardRule2021,
  title = {One Board to Rule Them All: {{History}} of the {{Arduino UNO}}},
  shorttitle = {One Board to Rule Them All},
  author = {Team, Arduino},
  year = {2021},
  month = dec,
  journal = {Arduino Blog},
  urldate = {2025-01-20},
  abstract = {After more than a decade in the hands of makers around the world, we're taking a fond look back at the beloved microcontroller, the UNO.},
  langid = {english},
  file = {/home/vexisu/Zotero/storage/D487P5AV/one-board-to-rule-them-all-history-of-the-arduino-uno.html}
}
